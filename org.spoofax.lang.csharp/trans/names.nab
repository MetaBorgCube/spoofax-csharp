module names
  
  version 0.1
  status under development
  
  author Gabriel Konat, TU Delft
  author Guido Wachsmuth (g.h.wachsmuth@tudelft.nl), TU Delft
  
imports

	include/CSharp
  desugar
  type/-
  
namespaces

  Namespace
  
  Class

  Function
  Field
  IField
  
  Variable

properties 

  parameter-types of Function: List(Ty)
  
binding rules // Namespaces 

  Namespace(x, _) :
    defines non-unique Namespace x
    scopes Namespace, Class
    
  // UsingPart(x) :
  //   imports Class from Namespace x
    
  // UsingPart(u, x) :
  //   refers to Namespace x in Namespace y
  //   where u refers to Namespace y
  
binding rules // Classes
	
  Class(c, _) :
    defines unique Class c
    scopes Field, IField, Function
    implicitly defines IField This() of type ClassTy(c)
   
  Class(c, p, _) :
    defines unique Class c
    scopes Field, IField, Function
    imports Field, imported Field, Function, imported Function from Class p
    implicitly defines IField This() of type ClassTy(c)
    implicitly defines IField Super() of type ClassTy(p)
   
  Interface(x, _) :
    defines unique Class x
    scopes Function
    
  Interface(x, y, _) :
    defines unique Class x
    scopes Function
    imports Function, imported Function from Class y
    
  PartialClass(c, _) :
    defines non-unique Class c
    scopes Field, IField, Function
    implicitly defines IField This() of type ClassTy(c)
    
  PartialClass(c, p, _) :
    defines non-unique Class c 
    scopes Field, IField, Function
    imports Field, imported Field, Function, imported Function from Class p
    implicitly defines IField This() of type ClassTy(c)
    implicitly defines IField Super() of type ClassTy(p)
   
  TypePart(c) :
  	refers to Namespace c
  	otherwise refers to Class c
  
  TypePart(ns, c):
    refers to Namespace c	in Namespace ns'
    otherwise refers to Class c in Namespace ns'
    where ns refers to Namespace ns'
    
binding rules // Fields

  FieldDef(t, x) :
    defines Field x of type t 
    
  FieldAccess(exp, f) :
    refers to Field f in Class c
    where exp has type ClassTy(c)

  This() : refers to IField This()
  Super(): refers to IField Super()
  
binding rules // Functions

  // FunDef(t, x, p*) :
  //   defines Function x 
  //     of type t
  //     of parameter-types pt*
  //   where
  //     p* has type pt*
      
  FunDef(t, x, p*, _) :
    defines Function x 
      of type t 
      of parameter-types pt*
    where
      p* has type pt*
    scopes Variable
    
  // FunCall(exp, f, args) :
  //   refers to Function f of parameter-types arg-types in Class e
  //   where exp has type Ty(e)
  //   where args has type arg-types
    
  FunCall(x, args) : 
    refers to Function x of parameter-types arg-types
    where args has type arg-types
    
  Param(t, x) :
    defines Variable x of type t 
    
binding rules // Variables

  VarDef(t, x, _) :
    defines Variable x of type t in subsequent scope 

  VarDef(t, x) :
    defines Variable x of type t in subsequent scope 

	InferredVarDef(x, e):
		defines Variable x of type t in subsequent scope
		where e has type t
		
  VarRef(x) :
    refers to Variable x otherwise
    refers to Field x
  
binding rules // Control flow

  For(t, x, init, cond, stmt, body) :
    defines Variable x of type t in cond, stmt, body

  ForEach(t, x, e, body) :
    defines Variable x of type t in body

  Block(stmt*) : 
    scopes Variable
    