module type/types

imports
	
  include/CSharp
    
overlays // built-in types
	
  BoolTy()   = TypeExp(TypePart("Bool")) 
  IntTy()    = TypeExp(TypePart("Int")) 
  StringTy() = TypeExp(TypePart("String"))
  ClassTy(t) = TypeExp(TypePart(t))
     
// rules // Utility
// 	
//   print-type = 
//     switch id
//       case ?"String" : !"string"
//       case ?"Int" : !"int"
//       case ?VoidTy() : !"void"
//       case ?IntTy() : !"int"
//       case ?StringTy() : !"string"
//       case ?Ty(t) : <print-type> t
//       case ?TyExp(t) : <print-type> t
//       case ?TyPart(t) : <print-type> t
//       case ?TyPart(q, t) : <concat-strings> [<print-type> q, ".", <print-type> t]
//       case ?[type|[]] : <print-type> type
//       case ?[type|types]; not(<?[]> types) : !$[[<print-type> type], [<print-type> types]]
//       case is-string : strip-annos
//       case ?name#(_) : !$[[name]]
//       otherwise : id
//     end
